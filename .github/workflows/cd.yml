name: Continuous Delivery

on:
  push:
    branches:
      - master    
  release:

jobs:
  docker-build-and-publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Get branch name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:${{ env.BRANCH_NAME }}-${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ env.BRANCH_NAME }}-${{ github.sha }}

  docker-publish-on-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
      - name: Check if Docker image exists
        id: check_image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:${{ env.BRANCH_NAME }}-${{ github.sha }} || echo "Docker image not found"
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Get branch name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Tag and push Docker image if exists
        if: steps.check_image.run != 'Docker image not found'
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/myapp:${{ env.BRANCH_NAME }}-${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.event.release.tag_name }}
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.event.release.tag_name }}
