name: Continuous Integration

on:
  push:
      branches:
        - master    
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and test
        run: dotnet test

  docker-build-and-publish:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }} .
      
      - name: Tag Docker image
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }} myapp:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp

  docker-publish-on-release:
    runs-on: ubuntu-latest
    needs: docker-build-and-publish
    if: github.event_name == 'release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Tag Docker image with release version
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.event.release.tag_name }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.event.release.tag_name }}
